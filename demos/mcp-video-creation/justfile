
import '~/git/gic/justfile.gemini_common'


# PATH := ~/go/bin:$(PATH)

# List all available recipes
list:
    just -l


# https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/blob/main/experiments/mcp-genmedia/mcp-genmedia-go/README.md
# Tests local installation of MCP Golang Imagen client
test-mcp:
    echo '{"jsonrpc":"2.0","method":"prompts/get","id":2,"params":{"name":"generate-image","arguments":{"prompt":"a futuristic cityscape at sunset"}}}' | mcp-imagen-go | jq .


# Launch gemini with bucket baked in
gemini-with-go:
    #!/bin/bash
    set -euo pipefail
    . .env
    export PATH=~/go/bin/:$PATH
    gemini -c -y --allowed-tools WebFetchTool,ChirpTool,ImagenTool,LyriaTool,VeoTool

# Dangerous, but should be fine while generating audio video locally.
gemini-with-go-yolo:
    #!/bin/bash
    set -euo pipefail
    . .env
    export PATH=~/go/bin/:$PATH
    gemini -c -y

# enable `imagen_t2i` Tool

# Authenticate properly
auth2:
    bin/gcloud-auth

# Checks if go MCP scripts have been installed
check-install:
    echo '1. Checking MCP Go installations...'
    ls -al ~/go/bin/mcp-*-go
    echo '1. Checking gcloud auth by issuing a simple list command..'
    gcloud auth list

# Runs Imagen MCP on net transport
run-imagen-mcp-on-port-8080:
    PATH=~/go/bin/:$PATH PROJECT_ID=ricc-genai PORT=8080 mcp-imagen-go -transport http

# Checks gemini-cli works with MCP
test-mcp-end2end:
    PATH=~/go/bin/:$PATH gemini -c --allowed-tools ChirpTool -p 'Show me Chirp voices through MCP tool, for instance the Italian female voices'

# Generates the audio story for CUJ01 - Story+Audio+CoverImage
test-cuj01:
    cat doc/CUJs/CUJ01-Seby-audio-story.md | PATH=~/go/bin/:$PATH gemini -y --allowed-tools ChirpTool,ImagenTool,LyriaTool,VeoTool,WebFetchTool -p
